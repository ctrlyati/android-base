apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'android-base'

    publishedGroupId = 'app.ctrlyati.base'
    libraryName = 'Android Base'
    artifact = 'android-base'

    libraryDescription = 'A Simple way to quickly generate your app without configure it'

    siteUrl = 'https://github.com/ctrlyati/android-base'
    gitUrl = 'https://github.com/ctrlyati/android-base.git'

    libraryVersion = '0.1.1'

    developerId = 'ctrlyati'
    developerName = 'Yati Dumrongsukit'
    developerEmail = 'ctrlyati@gmail.com'

    licenseName = 'MIT'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1000000
        versionName "0.1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:multidex:1.0.3'

    // android x
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.work:work-runtime-ktx:2.0.1'
    implementation 'androidx.collection:collection-ktx:1.0.0'
    implementation 'androidx.core:core-ktx:1.2.0-alpha01'
    implementation "com.google.android.material:material:1.1.0-alpha06"
    implementation "androidx.drawerlayout:drawerlayout:1.0.0"
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.slice:slice-builders:1.0.0"
    implementation "androidx.slice:slice-core:1.0.0"
    implementation "androidx.slice:slice-view:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    implementation "androidx.navigation:navigation-runtime-ktx:2.0.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.0.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.0.0"

    // ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
    implementation "androidx.lifecycle:lifecycle-livedata:2.0.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.0.0"

    implementation "androidx.room:room-runtime:2.1.0-beta01"
    kapt "androidx.room:room-compiler:2.1.0-beta01"
    implementation "androidx.room:room-ktx:2.1.0-beta01"
    implementation "androidx.room:room-rxjava2:2.1.0-beta01"


    // google play services
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-places:16.1.0'

    // gson
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    // retrofit network
    implementation 'com.squareup.retrofit:retrofit:1.9.0'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    // rx
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    // Koin for Kotlin
    implementation "org.koin:koin-core:2.0.0-GA"
    implementation "org.koin:koin-core-ext:2.0.0-GA"
    implementation "org.koin:koin-androidx-scope:2.0.0-GA"
    implementation "org.koin:koin-androidx-viewmodel:2.0.0-GA"

    // testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}
